{"version":3,"sources":["firebase/Firebase.js","assets/pictures/buttonGoogle.svg","components/logging/Logging.js","components/welcome/Welcome.js","assets/pictures/logo.svg","components/start/Start.js","assets/pictures/full-heart.svg","assets/pictures/emptyHeart.svg","assets/pictures/garbage.svg","components/tweetCard/TweetCard.js","assets/pictures/header-title.svg","assets/pictures/post.svg","assets/pictures/smalllogo.svg","components/feed/Feed.js","assets/pictures/arrow.svg","assets/pictures/imglogout.svg","components/userProfile/UserProfile.js","app/App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","googleLogin","signInWithPopup","getCurrentUser","currentUser","Logging","className","type","onClick","src","buttonGoogle","alt","Welcome","navigate","useNavigate","user","useState","loading","setLoading","userColor","setUserColor","userName","setUserName","colorChange","e","currentTarget","dataset","color","displayName","placeholder","onChange","target","value","maxLength","setTimeout","collection","doc","uid","set","name","email","username","console","log","alert","Start","logo","TweetCard","tweet","id","userId","month","buttonDisable","setButtonDisable","liked","setLiked","useEffect","isLikes","tweetLikes","find","userLike","get","then","snapshot","data","handleLike","a","tweetliked","index","indexOf","localArray","splice","push","update","photo","date","newDate","Date","getDate","getMonth","tweetDate","window","confirm","delete","garbage","disabled","fullHeart","emptyHeart","React","memo","prevProps","nextProps","tweetsPropsAreEqual","Feed","author","setTweet","tweetValue","setTweetValue","tweets","setTweets","tweetLength","onAuthStateChanged","unsuscribeTweets","orderBy","onSnapshot","docs","map","error","sendTweet","preventDefault","add","photoURL","smallLogo","headerTitle","newTweet","getTime","getMinutes","getSeconds","onKeyDown","key","min","max","style","width","post","UserProfile","favedTweets","setFavedTweets","isDark","setIsDark","postedTweets","setPostedTweets","handlePosts","where","handleFavorite","getFavedTweets","unsuscribePosts","arrow","signOut","imglogout","App","setUser","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.683f70b5.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport  firebase  from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAy-kXSqE91esIVtnRfZGW8B2LCcU90KGs\",\r\n  authDomain: \"tweets-proyect-4.firebaseapp.com\",\r\n  projectId: \"tweets-proyect-4\",\r\n  storageBucket: \"tweets-proyect-4.appspot.com\",\r\n  messagingSenderId: \"1094361259456\",\r\n  appId: \"1:1094361259456:web:e1e1a356e0b90307ed3c25\",\r\n  measurementId: \"G-XJR39SZYHJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n//exporta la funcionalidad e la base de datos\r\nexport const firestore = firebase.firestore();\r\n\r\n//authentication module\r\nexport const auth = firebase.auth();\r\n//authentication provider\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n//utility to log-in with pop up\r\nexport const googleLogin = () => auth.signInWithPopup(provider);\r\n//utility to log-out\r\nexport const logout = () => auth.signOut();\r\n\r\nexport const isLogged = () => {\r\n  return auth.currentUser !== null && auth.currentUser.uid !== null;\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return auth.currentUser;\r\n};\r\n\r\n//exporta el paquete firebase para otros usos\r\nexport default firebase;\r\n","export default __webpack_public_path__ + \"static/media/buttonGoogle.f2256fdf.svg\";","//Firebase\nimport { googleLogin } from '../../firebase/Firebase';\n\n//imgs\nimport buttonGoogle from '../../assets/pictures/buttonGoogle.svg';\n\n//style\nimport './Logging.css';\n\nfunction Logging() {\n\n  return (\n    <>\n      <div className=\"logging-container\">\n        <h1 className=\"welcome-title\">Bienvenido a Devs_united!</h1>\n        <h4 className=\"logging-title\">Registrate ahora!</h4>\n        <button type=\"button\" onClick={googleLogin} className=\"button-logging\">\n          <img src={buttonGoogle} className=\"google-button\" alt='googleButton'></img>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Logging;\n\n\n","//Firebase\nimport { firestore, getCurrentUser } from '../../firebase/Firebase';\n\n//React\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n//styles\nimport './Welcome.css';\nimport '../../app/App.css';\n\nfunction Welcome() {\n\n  let navigate = useNavigate();\n  let user = getCurrentUser();\n\n  const [loading, setLoading] = useState(false);\n  const [userColor, setUserColor] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  \n\n  const userChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const colorChange = (e) => {\n    setUserColor(e.currentTarget.dataset.color);\n  };\n\n  const continueClick = (e) => {\n    if (userColor !== \"\" && userName.length !== 0) {\n      setLoading(true)\n      setTimeout(function () {\n        firestore\n        .collection('users')\n        .doc(user.uid)\n        .set({ name:user.displayName, email:user.email, color:userColor, username:userName })\n        setLoading(false)\n        navigate('/feed')\n      }, 2000);\n    } else {\n      console.log(\"aqui\")\n      alert(\"You need to pick a user name and a color!\")\n    }\n  };\n\n\n  return (\n    <> \n      {loading ? \n      <div  className=\"loader\"></div> : \n      <div className=\"welcome-container\">\n        <div>\n          <span className=\"welcome\">WELCOME </span>\n          <span className=\"welcome beta\">{user.displayName}!</span>\n        </div>\n        <input \n          type=\"text\" \n          placeholder=\"Type your username\" \n          className=\"username\" \n          onChange={userChange}\n          maxLength=\"18\">\n        </input>\n        <div className=\"p-select-color\">Select your favorite color</div>\n        <div className=\"colors-container\"> \n          <button className=\"color-button beta-background\" type=\"button\" onClick={colorChange} data-color=\"beta\">\n          </button>\n          <button className=\"color-button orange\" type=\"button\" onClick={colorChange} data-color=\"orange\">\n          </button>\n          <button className=\"color-button yellow\" type=\"button\" onClick={colorChange} data-color=\"yellow\">\n          </button>\n          <button className=\"color-button green\" type=\"button\" onClick={colorChange} data-color=\"green\">\n          </button>\n          <button className=\"color-button blue\" type=\"button\" onClick={colorChange} data-color=\"blue\">\n          </button>\n          <button className=\"color-button purple\" type=\"button\" onClick={colorChange} data-color=\"purple\">\n          </button>\n        </div>\n        <button \n          type=\"button\" \n          className=\"continue-button\"\n          onClick={continueClick}>\n          CONTINUE\n        </button>\n      </div>\n      }\n    </>\n  );\n}\n\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/logo.d70e54fc.svg\";","// components\nimport Logging from '../logging/Logging';\nimport Welcome from '../welcome/Welcome';\n\n//Firebase\nimport { isLogged } from '../../firebase/Firebase';\n\n//imgs\nimport logo from '../../assets/pictures/logo.svg';\n\n//styles\nimport './Start.css';\nimport '../../app/App.css';\n\nfunction Start() { \n    \n  return (\n    <>\n      <div className=\"start-page\">\n        <div className=\"logo-container\">\n          <img src={logo} className=\"logo\" alt='logo'></img>\n        </div>\n        <div className=\"is-logged-container\">\n          {isLogged() ? <Welcome/> : <Logging/>}\n          <div className=\"copyright-footer\">\n            <span className=\"copyright\">© 2020 Devs_United - </span>\n            <span className=\"copyright beta\">BETA</span>\n          </div>\n        </div>\n      </div>\n        \n    </>\n  );\n}\n\nexport default Start;","export default __webpack_public_path__ + \"static/media/full-heart.cfe63298.svg\";","export default __webpack_public_path__ + \"static/media/emptyHeart.0a53b79e.svg\";","export default __webpack_public_path__ + \"static/media/garbage.521b1cb8.svg\";","//Firebase\nimport { firestore, getCurrentUser } from \"../../firebase/Firebase\";\n\n//icons\nimport fullHeart from '../../assets/pictures/full-heart.svg'\nimport emptyHeart from '../../assets/pictures/emptyHeart.svg'\nimport garbage from '../../assets/pictures/garbage.svg'\n\n//React\nimport React, { useEffect, useState } from \"react\";\n\n//styles\nimport \"./TweetCard.css\";\n\nconst TweetCard = ({ tweet }) => {\n  const { id, userId } = tweet;\n\n  const user = getCurrentUser();\n  const month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n  \n  const [buttonDisable, setButtonDisable] = useState(false);\n  const [liked, setLiked] = useState();\n  const [userColor, setUserColor]= useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  useEffect(() => {\n    const isLikes = tweet.tweetLikes.find((userLike) => userLike === user.uid);\n    setLiked(isLikes)\n  },[tweet.tweetLikes, user.uid])\n\n  useEffect(() => {\n    firestore\n      .doc(`users/${tweet.userId}`)\n      .get()\n      .then((snapshot)=>{\n        setUserColor(snapshot.data().color)\n        setUserName (snapshot.data().username)\n      })\n      return (\n        console.log('exit')\n      )\n  },[tweet.userId]);\n\n  // Borra el documento en Firebase por su id\n  const handleDelete = () => {\n    let option = window.confirm(\"¿Seguro que quiere borrar su Tweet?\");\n    if (option) {\n      firestore.doc(`tweets/${id}`).delete();\n    }\n  };\n\n  // Actualiza el documento de relacion de likes\n  const handleLike = async () => {\n    setButtonDisable(true);\n    const tweetliked = await firestore\n      .doc(`tweets/${tweet.id}`)\n      .get();\n    const index = tweetliked.data().tweetLikes.indexOf(user.uid);\n    let localArray = tweetliked.data().tweetLikes;\n    if (index >=0) {\n      setLiked(false);\n      localArray.splice(index, 1);\n    } else {\n      setLiked(true);\n      localArray.push(user.uid);\n    }\n    firestore\n    .doc(`tweets/${tweet.id}`)\n    .update({ tweetLikes: localArray });\n    setButtonDisable(false);\n  };\n\n  const tweetDate = (date) => {\n    const newDate = new Date(date);\n      return `${newDate.getDate()}${month[newDate.getMonth()]}`;\n  };\n\n  return (\n    <div key={tweet.id} className='tweet-card'>\n      <img className='tweet-user-img' src={tweet.photo} alt=\"Tweet user\" />\n      <div className='tweet-container'>\n        <div className='tweet-header'>\n          <div>  \n            <h1 className={`username-${userColor}`}>{userName}</h1>\n            <span className='date'>- {tweetDate(tweet.date)}.</span>\n          </div>\n          {\n          userId === user?.uid ?\n          <button onClick={() => handleDelete()} className='garbage'>\n            <img src={garbage} className='garbage' alt=\"garbage\"></img>\n          </button> : <></>\n          }\n        </div>\n        <h4>{tweet.tweet}</h4>\n        {\n          user != null ?\n            <div className='tweet-footer'>\n              <button onClick={handleLike} className='heart-button' disabled={buttonDisable}>\n                {liked ? \n                <img src={fullHeart} className='full-heart heart-button' alt=\"full-heart\"></img> :\n                <img src={emptyHeart} className='empty-heart heart-button' alt=\"empty-heart\"></img>\n                }\n              </button>\n              <span className={`likes-number ${liked ? 'red-number' : ''}`}>{tweet.tweetLikes?.length ?? 0}</span>\n            </div> :\n            <div className={`likes-number ${liked ? 'red-number' : ''}`}>{tweet.tweetLikes?.length ?? 0}</div>\n        }\n      </div>\n    </div>\n  );\n}\n\nfunction tweetsPropsAreEqual(prevProps, nextProps) {\n  const result =\n    prevProps.tweet.tweetLikes.length === nextProps.tweet.tweetLikes.length;\n  return result;\n}\n\nexport default React.memo(TweetCard, (prevProps, nextProps) =>\n  tweetsPropsAreEqual(prevProps, nextProps)\n);","export default __webpack_public_path__ + \"static/media/header-title.0f17436c.svg\";","export default __webpack_public_path__ + \"static/media/post.dbd261de.svg\";","export default __webpack_public_path__ + \"static/media/smalllogo.5038d75e.svg\";","//components\nimport TweetCard from \"../tweetCard/TweetCard\";\n\n//Firebase\nimport {auth, firestore, getCurrentUser} from \"../../firebase/Firebase\";\n\n//imgs\nimport headerTitle from '../../assets/pictures/header-title.svg'\nimport post from '../../assets/pictures/post.svg'\nimport smallLogo from '../../assets/pictures/smalllogo.svg'\n\n\n//React\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\n//styles\nimport \"./Feed.css\";\n\n//problema de ejecucion en useEffect\nfunction Feed() {\n\n  let navigate = useNavigate();\n  let user = getCurrentUser();\n\n  const goToProfile = (e) =>{\n    navigate('/userprofile')\n  }\n\n  // Estructura del tweet que creamos para enviar a Firebase\n  const [tweet, setTweet] = useState({\n    author: '',\n    tweetLikes: [],\n    photo: '',\n    tweet: '',\n    user: user !== null ?  user.uid : \"\",\n    id:'',\n  });\n\n  const [tweetValue, setTweetValue] = useState(''); \n\n  // Estado local para los tweets que hay en firebase\n  const [tweets, setTweets] = useState([]);\n\n  const [userColor, setUserColor] = useState (\"\");\n  \n\n  //Variable para darle estilo a la barra de input completado\n  let tweetLength = (tweetValue.length)/2 + '%';\n\n  // Crea la conexión para escuchar cambios en el documento de Firebase\n  const tweetsListener = () =>\n    firestore.collection(\"tweets\").orderBy(\"date\", \"desc\").onSnapshot(\n      (snapshot) => {\n        const tweets = snapshot.docs.map((doc) => {\n          firestore.doc(`tweets/${doc.id}`).update({ id: doc.id });\n          return {\n            ...doc.data(),\n            id: doc.id,\n          };\n        }, () => {\n          console.error(\"Sucedio un error\");\n          }\n        );\n        setTweets(tweets);\n      }, (error) => {\n        console.error(error);\n        }\n    );\n  \n    useEffect(() => {\n      auth.onAuthStateChanged((user) => {\n        if (user !== null) {\n          firestore\n          .doc(`users/${user.uid}`)\n          .get()\n          .then((snapshot) => { \n            setUserColor(snapshot.data().color);\n          })\n          const unsuscribeTweets = tweetsListener();\n          return () => {\n            // Limpiamos el listener creado cuando se desmonta el componente\n            unsuscribeTweets();\n          };\n        } else {navigate('/tweets')}\n      })\n    },[navigate]);  \n    \n  // Actualiza el estado local del tweet que vamos a enviar a Firebase\n  const handleNewTweet = (e) => {\n    const date = new Date();\n    let newTweet = {\n      ...tweet,\n      author: user.displayName,\n      photo: user.photoURL,\n      tweet: e.target.value,\n      userId: user.uid,\n      date: date.getTime() + date.getMinutes() + date.getSeconds(),\n    }\n    setTweet(newTweet);\n    setTweetValue(newTweet.tweet)\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      sendTweet(e);\n    }\n  }\n  \n  // Envia el tweet local a Firebase\n  const sendTweet = (e) => {\n    e.preventDefault();\n    try {\n      firestore.collection(\"tweets\").add(tweet);\n    } catch (error) {\n      console.error(error);\n    }\n    setTweetValue('');\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"header\">\n        <div className=\"header-container\">\n          <button type=\"button\" className='header-user' onClick={goToProfile}>\n            <img src={user?.photoURL} className={`header-user border-${userColor}`} alt=\"Header user\"></img>\n          </button>\n          <img src={smallLogo} className=\"small-logo\" alt=\"Small Logo\"></img>\n          <div>\n            <img src={headerTitle} className=\"header-title\" alt=\"Header title\"></img>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweets-container\">\n        <div className=\"input-container\">\n          <div className=\"input-block\">\n            <img src={user?.photoURL} alt='User' className='form-user'></img>\n            <form className=\"form-container\">\n              <textarea \n                onChange={handleNewTweet}\n                onKeyDown={handleKeyDown} \n                className='text-area'\n                placeholder=\"What's happening?\"\n                value={tweetValue} \n                name='tweet'\n                min='0'\n                max='200'\n                maxLength='200'>\n              </textarea>\n                <div className='tweet-length-bar' style={{width: tweetLength}}></div>\n              <div className=\"text-area-details\">\n                <span className=\"tweet-length\">{tweetValue.length}</span>\n                <span className=\"max-tweet-length\">200 max.</span>\n              </div>\n              <div className=\"post-button-container\">\n                <button type='submit' onClick={sendTweet} disabled={!tweetValue} className='post-button'>\n                  <img src={post} className='post-img' alt=\"post-button\"></img>\n                </button> \n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"tweets-list\">\n          {tweets.map((tweet) => {\n            return <TweetCard key={tweet.id} tweet={tweet} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Feed;","export default __webpack_public_path__ + \"static/media/arrow.67f326fd.svg\";","export default __webpack_public_path__ + \"static/media/imglogout.a36fdd73.svg\";","//components\nimport TweetCard from '../tweetCard/TweetCard';\n\n//Firebase\nimport {auth, firestore, getCurrentUser, logout} from '../../firebase/Firebase';\n\n//imgs\nimport arrow from '../../assets/pictures/arrow.svg';\nimport imglogout from '../../assets/pictures/imglogout.svg';\n\n//React\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\n//style\nimport './UserProfile.css';\n\nfunction UserProfile() { \n\n  let navigate = useNavigate();\n  let user = getCurrentUser();\n\n  const [favedTweets, setFavedTweets] = useState([]);\n  const [isDark, setIsDark] = useState(false);\n  const [postedTweets, setPostedTweets] = useState([]);\n  const [userColor, setUserColor] = useState (\"\")\n  const [userName, setUserName] = useState (\"\")\n\n  const onClickLogout = (e) => {\n    logout();\n    navigate('/');\n  };\n\n  const onClickBack = (e) => {\n    navigate('/feed');\n  };\n\n  const handlePosts = () => {\n    setIsDark(true);\n    auth.onAuthStateChanged((user) =>  {\n      if (user !== null) {\n        firestore\n        .collection('tweets').orderBy(\"date\", \"desc\")\n        .where(\"userId\", \"==\", user.uid)\n        .onSnapshot((snapshot)=>{\n          const postedTweets = snapshot.docs.map((doc) => {\n            return {\n              ...doc.data(),\n              key: doc.data().id,\n              id: doc.data().id,\n              photoURL: user.photoURL\n            };\n          })\n          setPostedTweets(postedTweets);\n        })\n      }\n    })\n  }\n\n  const handleFavorite = async () => {\n    setIsDark(false);\n    firestore\n      .collection('tweets')\n      .orderBy(\"date\", \"desc\")\n      .where(\"tweetLikes\", \"array-contains\", user.uid)\n      .onSnapshot((snapshot)=>{\n        const getFavedTweets = snapshot.docs.map((doc) => {\n            return {\n            ...doc.data(),\n            key: doc.data().id,\n            id: doc.data().id,\n            photoURL: user.photoURL\n          }\n        })\n        setFavedTweets(getFavedTweets);\n      })\n  }\n  \n  \n  useEffect(() => {\n    auth.onAuthStateChanged((user) =>  {\n      if (user !== null) {\n        firestore\n        .doc(`users/${user.uid}`)\n        .get()\n        .then((snapshot)=>{\n          setUserColor(snapshot.data().color);\n          setUserName (snapshot.data().username);\n        });\n        const unsuscribePosts = handlePosts();\n        return () => {\n          // Limpiamos el listener creado cuando se desmonta el componente\n          unsuscribePosts();\n        };\n      } else {navigate('/tweets')};\n    })\n  }, [navigate]);\n\n  return (\n    <div className='profile-container'>\n      <div className=\"profile-header-container\">\n        <div className=\"profile-header\">\n          <button type=\"button\" className='back-button' onClick={onClickBack}>\n            <div className=\"back-div\">\n              <img src={arrow} className='arrow' alt='arrow'></img>\n              <div className=\"header-username\">{userName}</div>\n            </div>\n          </button>\n          <button type=\"button\" className=\"button-logout\" onClick={onClickLogout}>\n            LOGOUT\n            <img src={imglogout} className='img-logout' alt='logout'></img>\n          </button>\n        </div>\n      </div>\n      <div className=\"profile-main-container\">\n        <div className=\"profile-main\">\n          <img src={user?.photoURL} className={`profile-photo border-${userColor}`} alt='user'></img>\n          <div className={`user-color username-${userColor}`}>{userName}</div>\n          <div className=\"tabs-buttons\">\n            <button \n              type=\"button\" \n              onClick={handlePosts} \n              className={`tabs ${isDark ? 'tabs-light': ''}` }\n              >POSTS\n            </button>\n            <button \n              type=\"button\" \n              onClick={handleFavorite} \n              className={`tabs ${isDark ? '': 'tabs-light'}` }\n              >FAVORITES\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweets-list\">\n        {isDark ? \n        postedTweets.map((tweet) => {\n          return (\n            <TweetCard \n              key={tweet.id} \n              tweet={tweet} />\n          );\n        }) :\n        favedTweets.map((tweet) => {\n          return (\n            <TweetCard \n              key={tweet.id}\n              tweet={tweet} />\n          );\n        })\n        }\n      </div>\n    </div>\n  )\n}\nexport default UserProfile;","//components\nimport Start from '../components/start/Start';\nimport Feed from '../components/feed/Feed';\nimport UserProfile from '../components/userProfile/UserProfile';\n\n//Firebase\nimport { auth } from '../firebase/Firebase';\n\n//React\nimport { useEffect, useState } from 'react';\nimport { Routes, Route} from \"react-router-dom\";\n\n//styles\nimport './App.css';\n\nfunction App() {\n  \n  const [user, setUser] = useState(null)\n\n  useEffect (()=>{\n    auth.onAuthStateChanged((user)=>{\n      setUser(user);\n    })\n  },[])\n\n  return (\n  <div className=\"app\">\n      <Routes>\n        <Route exact path=\"/\" element={<Start/>}/> \n        <Route path=\"/feed\"element={<Feed/>}/>\n        <Route path=\"/userprofile\"element={<UserProfile/>}/>\n        <Route path=\"/tweets\" element={<Start/>}/>\n      </Routes>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}